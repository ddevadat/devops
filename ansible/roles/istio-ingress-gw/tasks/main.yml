- name: tempating istio-gw-install scripts
  template:
    src: "{{ item }}.j2"
    dest: "/tmp/{{item}}.sh"
  with_items:
    - install_istio_ingres_gw

- name: install istio gateway
  shell: sh /tmp/install_istio_ingres_gw.sh

- name: Creating secure ingress gw secret
  shell: 
    cmd: |
      cat <<EOF | kubectl apply -f -
      apiVersion: v1
      kind: Secret
      metadata:
        name: ingress-gw-ssl
        namespace: "{{ istio_namespace}}"
      data:
        ca.crt: ""
        tls.crt: "{{ ssl_site_crt | b64encode }}"
        tls.key: "{{ ssl_site_key | b64encode }}"
      EOF

- name: Creating ingress gw object
  shell: 
    cmd: |
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: Gateway
      metadata:
        name: sbrc-gateway
        namespace: "{{ istio_namespace}}"
      spec:
        selector:
          istio: ingressgateway
        servers:
        - port:
            number: 443
            name: https
            protocol: HTTPS
          tls:
            mode: PASSTHROUGH
            #mode: SIMPLE
            #credentialName: httpbin-credential-1
          hosts:
          - "{{domain_name}}"
      EOF

# - name: Creating virtual service object
#   shell: 
#     cmd: |
#       cat <<EOF | kubectl apply -f -
#       apiVersion: networking.istio.io/v1alpha3
#       kind: VirtualService
#       metadata:
#         name: vsnginxingress
#         namespace: "{{ namespace}}"
#       spec:
#         hosts:
#         - "{{domain_name}}"
#         gateways:
#         - "{{ istio_namespace}}/sbrc-gateway"
#         http:
#         - match:
#           - uri:
#               prefix: "/registry/"
#           rewrite:
#             uri: "/"
#           route:
#           - destination:
#               port:
#                 number: 8081
#               host: registry.{{ namespace }}.svc.cluster.local
#         - match:
#           - uri:
#               prefix: "/auth"
#           headers:
#             request:
#               set:
#                 X-Forwarded-Proto: "https"
#                 X-Forwarded-Port: "443"
#                 X-Forwarded-Server: {{ domain_name }}
#                 X-Forwarded-Host: {{ domain_name }}
#                 Host: {{ domain_name }}
#           route:
#           - destination:
#               port:
#                 number: 8080
#               host: keycloak.{{ namespace }}.svc.cluster.local
#         - match:
#           - uri:
#               prefix: "/claim-ms"
#           route:
#           - destination:
#               port:
#                 number: 8082
#               host: claim-ms.{{ namespace }}.svc.cluster.local
#         - match:
#           - uri:
#               prefix: "/bucket"
#           route:
#           - destination:
#               port:
#                 number: 9000
#               host: filestorage.{{ namespace }}.svc.cluster.local
#       EOF



- name: Creating virtual service object
  shell: 
    cmd: |
      cat <<EOF | kubectl apply -f -
      apiVersion: networking.istio.io/v1alpha3
      kind: VirtualService
      metadata:
        name: vsnginxingress
        namespace: "{{ namespace}}"
      spec:
        hosts:
        - "{{domain_name}}"
        gateways:
        - "{{ istio_namespace}}/sbrc-gateway"
        tls:
        - match:
          - port: 443
            sniHosts: 
            - "{{domain_name}}"
          route:
          - destination:
              port:
                number: 443
              host: nginx-ingress.{{ namespace }}.svc.cluster.local
      EOF

# - name: Creating virtual service object for registry
#   shell: 
#     cmd: |
#       cat <<EOF | kubectl apply -f -
#       apiVersion: networking.istio.io/v1alpha3
#       kind: VirtualService
#       metadata:
#         name: vsregistry
#       spec:
#         hosts:
#         - registry.{{ namespace }}.svc.cluster.local
#         http:
#         - match:
#           - headers:
#               Host:
#                 exact: "{{domain_name}}"
#             uri:
#               prefix: "/registry"
#             ignoreUriCase: true
#           route:
#           - destination:
#               host: registry.{{ namespace }}.svc.cluster.local
#       EOF