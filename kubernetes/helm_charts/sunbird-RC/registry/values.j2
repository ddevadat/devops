namespace: {{ namespace }}
imagepullsecrets: {{ imagepullsecrets }}
dockerhub: {{ dockerhub }}

replicaCount: {{registry_replicacount|default(1)}}
repository: {{registry_repository|default('sunbird-rc-core')}}
image_tag: {{image_tag}}
resources:
  requests:
    cpu: {{registry_cpu_req|default('100m')}}
    memory: {{registry_mem_req|default('100Mi')}}
  limits:
    cpu: {{registry_cpu_limit|default('1000m')}}
    memory: {{registry_memory_limit|default('1024Mi')}}
network:
  port: 8081
  targetport: 8081
strategy:
  type: RollingUpdate
  maxsurge: {{ registry_maxsurge|default('50%') }}
  maxunavailable: {{ registry_maxunavailable|default('50%') }}

autoscaling:
  enabled: {{ registry_autoscaling_enabled | default('false') }}
  minReplicas: {{ registry_autoscaling_minReplicas|default(1) }}
  maxReplicas: {{ registry_autoscaling_maxReplicas|default(3) }}
  targetCPUUtilizationPercentage: {{ registry_autoscaling_targetCPUUtilizationPercentage|default(60) }}
  targetMemoryUtilizationPercentage: {{ registry_autoscaling_targetMemoryUtilizationPercentage|default('') }}

rccoreenv:
  connectionInfo_uri: {{ postgres_connectionInfo_uri }}
  connectionInfo_username: {{ postgres_connectionInfo_username }}
  connectionInfo_password: {{ connectionInfo_password }}
  elastic_search_enabled: {{ elastic_search_enabled|default('false')}}
  elastic_search_connection_url: {{ elastic_search_connection_url }}
  search_provider: "dev.sunbirdrc.registry.service.ElasticSearchService"
  search_providerName: "dev.sunbirdrc.registry.service.ElasticSearchService"
  sunbird_sso_realm: {{ registry_keycloak_realm|default('sunbird-rc')}}
  sunbird_sso_url: {{registry_sso_url}}
  sunbird_sso_admin_client_id: {{ registry_admin_client_id|default('admin-api')}}
  sunbird_sso_client_id: {{ registry_client_id|default('registry-frontend')}}
  sunbird_sso_admin_client_secret: {{admin_api_secret}}
  enable_external_templates: {{ enable_external_templates|default('true') }}
  sign_url: {{ sign_url|default('http://certificatesign:8079/sign') }}
  sign_health_check_url: {{ sign_hc_url|default('http://certificatesign:8079/health') }}
  signature_enabled: {{ signature_enabled|default('true') }}
  pdf_url: {{ pdf_url|default('http://certificateapi:8078/api/v1/certificatePDF') }}
  certificate_health_check_url: {{ cert_hc_url|default('http://certificateapi:8078/health') }}
  template_base_url: {{ template_base_url|default('http://registry:8081/api/v1/templates/') }}
  workflow.enable: {{ registry_workflow_enable|default('false')}}
  connectionInfo_maxPoolSize: {{ registry_connectionInfo_maxPoolSize|default('200')}}
  auditTaskExecutor_queueCapacity: {{ registry_auditTaskExecutor_queueCapacity|default('100')}}
  taskExecutor_index_queueCapacity: {{ registry_taskExecutor_index_queueCapacity|default('100')}}
  authentication_enabled: {{ registry_authentication_enabled|default('true')}}
  async_enabled: {{ registry_async_enabled|default('false')}}
  webhook_enabled: {{ registry_webhook_enabled|default('false')}}
  logging.level.root : {{ registry_logging_level|default('INFO')}}
  filestorage_connection_url: {{ MINIO_URL|default('http://filestorage:9000') }}
  filestorage_access_key: {{ MINIO_ROOT_USER|default('admin') }}
  filestorage_secret_key: {{ MINIO_ROOT_PASSWORD|default('admin1234') }}
  filestorage_bucket_key: {{ MINIO_BUCKET|default('issuance') }}


serviceMonitor:
  enabled: true
  labels: # labels with which the prometheus choose the serviceMonitor
    app: prometheus-operator
    release: prometheus-operator
