---
- name: Create Network
  collections: 
    - oracle.oci
  hosts: localhost
  vars:
    vcn_cidr_block: "10.90.0.0/16"
    vlan_cidr_block: "10.90.1.0/24"
    vcn_name: "SunbirdEd-VCN"
    vcn_dns_label: "sunbirded"
    compartment_id: "{{ lookup('env', 'COMPARTMENT_OCID') }}"
    quad_zero_route: "0.0.0.0/0"

  tasks: 
  - name: Check pre-requisites
    fail:
      msg: "Environment variable {{item}} not set. Please declare an environment variable with an appropriate value for the sample to work."
    when: item not in ansible_env
    with_items:
      - "COMPARTMENT_OCID"

  - name: Create a VCN
    oci_network_vcn:
      compartment_id: "{{ compartment_id }}"
      display_name: "{{ vcn_name }}"
      cidr_block: "{{ vcn_cidr_block }}"
      dns_label: "{{ vcn_dns_label }}"
    register: result
    tags:
      - network

  - set_fact:
      vcn_id: "{{ result.vcn.id }}"
      vcn: "{{ result.vcn }}"
      cacheable: yes
    tags:
      - network

  - name: Get availability domains for vlans
    oci_identity_availability_domain_facts:
      compartment_id: "{{compartment_id}}"
    register: oci_ads
    tags:
      - always

  - set_fact:
      availability_domain: "{{oci_ads.availability_domains[0].name}}"
    tags:
      - always

  - name: Create a new Internet Gateway
    oci_network_internet_gateway:
      compartment_id: "{{ compartment_id }}"
      vcn_id: "{{ vcn_id }}"
      name: "IG"
      is_enabled: 'yes'
      state: 'present'
    register: result
    tags:
      - network

  - set_fact:
      ig_id: "{{ result.internet_gateway.id }}"
      public_route_table_rules:
        - cidr_block: "{{ quad_zero_route }}"
          network_entity_id: "{{ result.internet_gateway.id }}"
    tags:
      - network

  - name: Create a new NAT Gateway
    oci_network_nat_gateway:
      compartment_id: "{{ compartment_id }}"
      vcn_id: "{{ vcn_id }}"
      name: "NG"
      state: 'present'
    register: result
    tags:
      - network

  - set_fact:
      ng_id: "{{ result.nat_gateway.id }}"
      private_route_table_rules:
        - cidr_block: "{{ quad_zero_route }}"
          network_entity_id: "{{ result.nat_gateway.id }}"
    tags:
      - network



  - name: Create route table to connect internet gateway to the VCN
    oci_network_route_table:
      compartment_id: "{{ compartment_id }}"
      vcn_id: "{{ vcn_id }}"
      name: "PUB-SL-RT"
      route_rules: "{{ public_route_table_rules }}"
      state: 'present'
    register: result
    tags:
      - network

  - set_fact:
      public_rt_id: "{{ result.route_table.id }}"
    tags:
      - network

  - name: Create route table to connect Nat gateway to the VCN
    oci_network_route_table:
      compartment_id: "{{ compartment_id }}"
      vcn_id: "{{ vcn_id }}"
      name: "PVT-SL-RT"
      route_rules: "{{ private_route_table_rules }}"
      state: 'present'
    register: result
    tags:
      - network

  - set_fact:
      private_rt_id: "{{ result.route_table.id }}"
    tags:
      - network

  # - name: Create network_security_group
  #   oci_network_security_group:
  #     compartment_id: "{{ compartment_id }}"
  #     display_name: "sunbird network security group"
  #     vcn_id: "{{ vcn_id }}"
  #   register: result
  #   tags:
  #     - network

  # - set_fact:
  #     network_security_group_id: "{{result.network_security_group.id}}"
  #   tags:
  #     - network
  
  - name: Create a Subnet
    oci_network_subnet:
      cidr_block: "{{ vlan_cidr_block }}"
      compartment_id: "{{ compartment_id }}"
      display_name: "K8S-API-SN"
      route_table_id: "{{ private_rt_id }}"
      dns_label: "k8sapi"
      prohibit_public_ip_on_vnic: yes
      vcn_id: "{{ vcn_id }}"
    register: result
    tags:
      - network
      - k8s
  - set_fact:
      vlan_id: "{{ result.subnet.id }}"
      cacheable: yes